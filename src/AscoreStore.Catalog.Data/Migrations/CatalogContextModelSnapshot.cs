// <auto-generated />
using System;
using AscoreStore.Catalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AscoreStore.Catalog.Data.Migrations
{
    [DbContext(typeof(CatalogContext))]
    partial class CatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AscoreStore.Catalog.Domain.ProductAggregate.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("37f33546-4636-46b4-9be9-04d34855623b"),
                            Code = 1,
                            Name = "Camisa"
                        },
                        new
                        {
                            Id = new Guid("fdadfa58-06ee-4fc8-8cc4-a79c197e2197"),
                            Code = 2,
                            Name = "Caneca"
                        },
                        new
                        {
                            Id = new Guid("0bc27c7f-44ae-49e7-bdbf-69487c2aac0b"),
                            Code = 3,
                            Name = "Relogio"
                        },
                        new
                        {
                            Id = new Guid("bd6b53a8-9042-47ca-8456-46082a560936"),
                            Code = 4,
                            Name = "Celulares"
                        },
                        new
                        {
                            Id = new Guid("358527ea-0e3d-4dc4-92c7-0dd95a011f03"),
                            Code = 5,
                            Name = "Banho"
                        },
                        new
                        {
                            Id = new Guid("2376014e-fa9e-4020-a710-674ca68ccd04"),
                            Code = 6,
                            Name = "Sapatos"
                        },
                        new
                        {
                            Id = new Guid("e4b8e0b7-cc0f-4f57-8c8f-051ae0e39f2a"),
                            Code = 7,
                            Name = "Serviços"
                        });
                });

            modelBuilder.Entity("AscoreStore.Catalog.Domain.ProductAggregate.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("blob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AscoreStore.Catalog.Domain.ProductAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("AscoreStore.Catalog.Domain.ProductAggregate.Product", b =>
                {
                    b.HasOne("AscoreStore.Catalog.Domain.ProductAggregate.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AscoreStore.Catalog.Domain.ProductAggregate.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AscoreStore.Catalog.Domain.ProductAggregate.Dimensions", "Dimensions", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Depth")
                                .HasColumnType("int")
                                .HasColumnName("Depth");

                            b1.Property<int>("Height")
                                .HasColumnType("int")
                                .HasColumnName("Height");

                            b1.Property<int>("Width")
                                .HasColumnType("int")
                                .HasColumnName("Width");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Category");

                    b.Navigation("Dimensions")
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("AscoreStore.Catalog.Domain.ProductAggregate.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
